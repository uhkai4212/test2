-- FusionUI Library
-- A lightweight, feature-rich UI library for Roblox
-- Features: Rounded corners, modern font, draggable windows, 
-- proper sizing, shadows, glow effects, and padding

local FusionUI = {}
FusionUI.__index = FusionUI

-- Constants
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local DEFAULT_FONT = Enum.Font.GothamMedium
local DEFAULT_TEXT_SIZE = 14
local DEFAULT_CORNER_RADIUS = UDim.new(0, 8)
local DEFAULT_PADDING = UDim.new(0, 10)
local DEFAULT_SHADOW_TRANSPARENCY = 0.5
local DEFAULT_SHADOW_SIZE = UDim2.new(1, 6, 1, 6)
local DEFAULT_ACCENT_COLOR = Color3.fromRGB(66, 134, 244)
local DEFAULT_GLOW_TRANSPARENCY = 0.7
local DEFAULT_GLOW_SIZE = 15

-- Helper Functions
local function CreateInstance(className, properties)
    local instance = Instance.new(className)
    for k, v in pairs(properties) do
        instance[k] = v
    end
    return instance
end

local function AddRoundedCorners(frame, radius)
    local corner = CreateInstance("UICorner", {
        CornerRadius = radius or DEFAULT_CORNER_RADIUS,
        Parent = frame
    })
    return corner
end

local function AddPadding(frame, padding)
    local uiPadding = CreateInstance("UIPadding", {
        PaddingTop = padding or DEFAULT_PADDING,
        PaddingBottom = padding or DEFAULT_PADDING,
        PaddingLeft = padding or DEFAULT_PADDING,
        PaddingRight = padding or DEFAULT_PADDING,
        Parent = frame
    })
    return uiPadding
end

local function AddShadow(frame, transparency, size)
    local shadow = CreateInstance("ImageLabel", {
        Name = "Shadow",
        BackgroundTransparency = 1,
        Image = "rbxassetid://1316045217", -- Shadow asset
        ImageColor3 = Color3.fromRGB(0, 0, 0),
        ImageTransparency = transparency or DEFAULT_SHADOW_TRANSPARENCY,
        Position = UDim2.new(0.5, 0, 0.5, 0),
        AnchorPoint = Vector2.new(0.5, 0.5),
        Size = size or DEFAULT_SHADOW_SIZE,
        ZIndex = frame.ZIndex - 1,
        Parent = frame
    })
    return shadow
end

local function AddGlow(frame, color, transparency, size)
    local glow = CreateInstance("ImageLabel", {
        Name = "Glow",
        BackgroundTransparency = 1,
        Image = "rbxassetid://151205964", -- Glow asset
        ImageColor3 = color or DEFAULT_ACCENT_COLOR,
        ImageTransparency = transparency or DEFAULT_GLOW_TRANSPARENCY,
        Position = UDim2.new(0.5, 0, 0.5, 0),
        AnchorPoint = Vector2.new(0.5, 0.5),
        Size = UDim2.new(1, size or DEFAULT_GLOW_SIZE, 1, size or DEFAULT_GLOW_SIZE),
        ZIndex = frame.ZIndex - 1,
        Parent = frame
    })
    return glow
end

local function MakeDraggable(frame, dragHandle)
    local dragInput, dragStart, startPos
    local dragging = false
    
    local function UpdatePosition(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale, 
            startPos.X.Offset + delta.X, 
            startPos.Y.Scale, 
            startPos.Y.Offset + delta.Y
        )
    end
    
    dragHandle = dragHandle or frame
    
    dragHandle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    dragHandle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input == dragInput) then
            UpdatePosition(input)
        end
    end)
end

-- Create ScreenGui
function FusionUI:CreateScreenGui(name)
    local screenGui = CreateInstance("ScreenGui", {
        Name = name or "FusionUI",
        Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui"),
        ResetOnSpawn = false,
        ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    })
    
    return screenGui
end

-- Create a Window
function FusionUI:CreateWindow(parent, title, size, position)
    local windowSize = size or UDim2.new(0, 400, 0, 300)
    local windowPosition = position or UDim2.new(0.5, -windowSize.X.Offset/2, 0.5, -windowSize.Y.Offset/2)
    
    -- Create window frame
    local window = CreateInstance("Frame", {
        Name = title or "Window",
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        BorderSizePixel = 0,
        Position = windowPosition,
        Size = windowSize,
        ZIndex = 2,
        Parent = parent
    })
    
    -- Add rounded corners
    AddRoundedCorners(window)
    
    -- Add shadow
    AddShadow(window)
    
    -- Create title bar
    local titleBar = CreateInstance("Frame", {
        Name = "TitleBar",
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        BorderSizePixel = 0,
        Size = UDim2.new(1, 0, 0, 30),
        ZIndex = 3,
        Parent = window
    })
    
    -- Add rounded corners to title bar (top corners only)
    local titleCorner = CreateInstance("UICorner", {
        CornerRadius = DEFAULT_CORNER_RADIUS,
        Parent = titleBar
    })
    
    -- Create title text
    local titleText = CreateInstance("TextLabel", {
        Name = "Title",
        BackgroundTransparency = 1,
        Font = DEFAULT_FONT,
        Text = title or "Window",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = DEFAULT_TEXT_SIZE,
        TextXAlignment = Enum.TextXAlignment.Left,
        Size = UDim2.new(1, -40, 1, 0),
        Position = UDim2.new(0, 10, 0, 0),
        ZIndex = 4,
        Parent = titleBar
    })
    
    -- Create close button
    local closeButton = CreateInstance("TextButton", {
        Name = "Close",
        BackgroundColor3 = Color3.fromRGB(255, 95, 95),
        BorderSizePixel = 0,
        Position = UDim2.new(1, -25, 0.5, -8),
        Size = UDim2.new(0, 16, 0, 16),
        Text = "",
        ZIndex = 4,
        Parent = titleBar
    })
    
    -- Add rounded corners to close button
    AddRoundedCorners(closeButton, UDim.new(1, 0))
    
    -- Add close button functionality
    closeButton.MouseButton1Click:Connect(function()
        window.Visible = false
    end)
    
    -- Create container for content
    local container = CreateInstance("Frame", {
        Name = "Container",
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 0, 0, 30),
        Size = UDim2.new(1, 0, 1, -30),
        ZIndex = 3,
        Parent = window
    })
    
    -- Add padding to container
    AddPadding(container)
    
    -- Make window draggable
    MakeDraggable(window, titleBar)
    
    -- Return window and container
    return {
        Window = window,
        Container = container,
        TitleBar = titleBar
    }
end

-- Create a Button
function FusionUI:CreateButton(parent, text, callback)
    local button = CreateInstance("TextButton", {
        Name = text or "Button",
        BackgroundColor3 = Color3.fromRGB(50, 50, 50),
        BorderSizePixel = 0,
        Size = UDim2.new(1, 0, 0, 35),
        Font = DEFAULT_FONT,
        Text = text or "Button",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = DEFAULT_TEXT_SIZE,
        ZIndex = 4,
        Parent = parent
    })
    
    -- Add rounded corners
    AddRoundedCorners(button)
    
    -- Add hover and click effects
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(60, 60, 60)}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}):Play()
    end)
    
    button.MouseButton1Down:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {BackgroundColor3 = DEFAULT_ACCENT_COLOR}):Play()
    end)
    
    button.MouseButton1Up:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(60, 60, 60)}):Play()
        if callback then callback() end
    end)
    
    return button
end

-- Create a Label
function FusionUI:CreateLabel(parent, text, textSize)
    local label = CreateInstance("TextLabel", {
        Name = "Label",
        BackgroundTransparency = 1,
        Size = UDim2.new(1, 0, 0, textSize or (DEFAULT_TEXT_SIZE + 10)),
        Font = DEFAULT_FONT,
        Text = text or "Label",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = textSize or DEFAULT_TEXT_SIZE,
        TextWrapped = true,
        TextXAlignment = Enum.TextXAlignment.Left,
        ZIndex = 4,
        Parent = parent
    })
    
    return label
end

-- Create a TextBox
function FusionUI:CreateTextBox(parent, placeholderText, callback)
    local textBoxFrame = CreateInstance("Frame", {
        Name = "TextBoxFrame",
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        BorderSizePixel = 0,
        Size = UDim2.new(1, 0, 0, 35),
        ZIndex = 4,
        Parent = parent
    })
    
    -- Add rounded corners
    AddRoundedCorners(textBoxFrame)
    
    local textBox = CreateInstance("TextBox", {
        Name = "TextBox",
        BackgroundTransparency = 1,
        ClearTextOnFocus = false,
        Font = DEFAULT_FONT,
        PlaceholderText = placeholderText or "Enter text...",
        PlaceholderColor3 = Color3.fromRGB(150, 150, 150),
        Text = "",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = DEFAULT_TEXT_SIZE,
        TextXAlignment = Enum.TextXAlignment.Left,
        Size = UDim2.new(1, -20, 1, 0),
        Position = UDim2.new(0, 10, 0, 0),
        ZIndex = 5,
        Parent = textBoxFrame
    })
    
    -- Add focus highlight
    textBox.Focused:Connect(function()
        AddGlow(textBoxFrame, DEFAULT_ACCENT_COLOR, 0.8)
        TweenService:Create(textBoxFrame, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}):Play()
    end)
    
    textBox.FocusLost:Connect(function(enterPressed)
        if textBoxFrame:FindFirstChild("Glow") then
            textBoxFrame.Glow:Destroy()
        end
        TweenService:Create(textBoxFrame, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}):Play()
        
        if enterPressed and callback then
            callback(textBox.Text)
        end
    end)
    
    return textBox
end

-- Create a Toggle
function FusionUI:CreateToggle(parent, text, default, callback)
    local toggle = CreateInstance("Frame", {
        Name = "Toggle",
        BackgroundTransparency = 1,
        Size = UDim2.new(1, 0, 0, 30),
        ZIndex = 4,
        Parent = parent
    })
    
    local label = CreateInstance("TextLabel", {
        Name = "Label",
        BackgroundTransparency = 1,
        Size = UDim2.new(1, -40, 1, 0),
        Font = DEFAULT_FONT,
        Text = text or "Toggle",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = DEFAULT_TEXT_SIZE,
        TextXAlignment = Enum.TextXAlignment.Left,
        ZIndex = 5,
        Parent = toggle
    })
    
    local toggleButton = CreateInstance("Frame", {
        Name = "ToggleButton",
        BackgroundColor3 = default and DEFAULT_ACCENT_COLOR or Color3.fromRGB(80, 80, 80),
        BorderSizePixel = 0,
        Position = UDim2.new(1, -40, 0.5, -10),
        Size = UDim2.new(0, 40, 0, 20),
        ZIndex = 5,
        Parent = toggle
    })
    
    -- Add rounded corners
    AddRoundedCorners(toggleButton, UDim.new(0, 10))
    
    local toggleCircle = CreateInstance("Frame", {
        Name = "Circle",
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BorderSizePixel = 0,
        Position = default and UDim2.new(1, -18, 0.5, 0) or UDim2.new(0, 2, 0.5, 0),
        Size = UDim2.new(0, 16, 0, 16),
        AnchorPoint = Vector2.new(0, 0.5),
        ZIndex = 6,
        Parent = toggleButton
    })
    
    -- Add rounded corners to circle
    AddRoundedCorners(toggleCircle, UDim.new(1, 0))
    
    -- Toggle state
    local enabled = default or false
    
    -- Make toggle clickable
    toggleButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            enabled = not enabled
            
            -- Animate toggle
            if enabled then
                TweenService:Create(toggleButton, TweenInfo.new(0.2), {BackgroundColor3 = DEFAULT_ACCENT_COLOR}):Play()
                TweenService:Create(toggleCircle, TweenInfo.new(0.2), {Position = UDim2.new(1, -18, 0.5, 0)}):Play()
            else
                TweenService:Create(toggleButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(80, 80, 80)}):Play()
                TweenService:Create(toggleCircle, TweenInfo.new(0.2), {Position = UDim2.new(0, 2, 0.5, 0)}):Play()
            end
            
            if callback then
                callback(enabled)
            end
        end
    end)
    
    -- Make entire toggle clickable
    toggle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            enabled = not enabled
            
            -- Animate toggle
            if enabled then
                TweenService:Create(toggleButton, TweenInfo.new(0.2), {BackgroundColor3 = DEFAULT_ACCENT_COLOR}):Play()
                TweenService:Create(toggleCircle, TweenInfo.new(0.2), {Position = UDim2.new(1, -18, 0.5, 0)}):Play()
            else
                TweenService:Create(toggleButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(80, 80, 80)}):Play()
                TweenService:Create(toggleCircle, TweenInfo.new(0.2), {Position = UDim2.new(0, 2, 0.5, 0)}):Play()
            end
            
            if callback then
                callback(enabled)
            end
        end
    end)
    
    return toggle, enabled
end

-- Create a Slider
function FusionUI:CreateSlider(parent, text, min, max, default, callback)
    min = min or 0
    max = max or 100
    default = default or min
    
    local slider = CreateInstance("Frame", {
        Name = "Slider",
        BackgroundTransparency = 1,
        Size = UDim2.new(1, 0, 0, 50),
        ZIndex = 4,
        Parent = parent
    })
    
    local label = CreateInstance("TextLabel", {
        Name = "Label",
        BackgroundTransparency = 1,
        Size = UDim2.new(1, -50, 0, 20),
        Position = UDim2.new(0, 0, 0, 0),
        Font = DEFAULT_FONT,
        Text = text or "Slider",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = DEFAULT_TEXT_SIZE,
        TextXAlignment = Enum.TextXAlignment.Left,
        ZIndex = 5,
        Parent = slider
    })
    
    local valueLabel = CreateInstance("TextLabel", {
        Name = "Value",
        BackgroundTransparency = 1,
        Size = UDim2.new(0, 40, 0, 20),
        Position = UDim2.new(1, -40, 0, 0),
        Font = DEFAULT_FONT,
        Text = tostring(default),
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = DEFAULT_TEXT_SIZE,
        TextXAlignment = Enum.TextXAlignment.Right,
        ZIndex = 5,
        Parent = slider
    })
    
    local sliderBar = CreateInstance("Frame", {
        Name = "SliderBar",
        BackgroundColor3 = Color3.fromRGB(60, 60, 60),
        BorderSizePixel = 0,
        Position = UDim2.new(0, 0, 0, 30),
        Size = UDim2.new(1, 0, 0, 6),
        ZIndex = 5,
        Parent = slider
    })
    
    -- Add rounded corners to slider bar
    AddRoundedCorners(sliderBar, UDim.new(0, 3))
    
    local sliderFill = CreateInstance("Frame", {
        Name = "SliderFill",
        BackgroundColor3 = DEFAULT_ACCENT_COLOR,
        BorderSizePixel = 0,
        Size = UDim2.new((default - min) / (max - min), 0, 1, 0),
        ZIndex = 6,
        Parent = sliderBar
    })
    
    -- Add rounded corners to slider fill
    AddRoundedCorners(sliderFill, UDim.new(0, 3))
    
    local sliderButton = CreateInstance("Frame", {
        Name = "SliderButton",
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BorderSizePixel = 0,
        Position = UDim2.new((default - min) / (max - min), 0, 0.5, 0),
        Size = UDim2.new(0, 14, 0, 14),
        AnchorPoint = Vector2.new(0.5, 0.5),
        ZIndex = 7,
        Parent = sliderBar
    })
    
    -- Add rounded corners to slider button
    AddRoundedCorners(sliderButton, UDim.new(1, 0))
    
    -- Add shadow to slider button
    AddShadow(sliderButton, 0.4, UDim2.new(1, 4, 1, 4))
    
    -- Slider functionality
    local dragging = false
    
    local function updateSlider(input)
        local xPos = math.clamp((input.Position.X - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X, 0, 1)
        local value = min + ((max - min) * xPos)
        value = math.floor(value * 10) / 10  -- Round to 1 decimal place
        
        sliderFill.Size = UDim2.new(xPos, 0, 1, 0)
        sliderButton.Position = UDim2.new(xPos, 0, 0.5, 0)
        valueLabel.Text = tostring(value)
        
        if callback then
            callback(value)
        end
    end
    
    sliderBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            updateSlider(input)
        end
    end)
    
    sliderBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            updateSlider(input)
        end
    end)
    
    return slider
end

return FusionUI
