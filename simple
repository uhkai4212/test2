-- Clean UI Library
-- Minimal, rounded button library for Roblox

local Library = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Create ScreenGui
local function createScreenGui()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "CleanUI"
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    return screenGui
end

-- Create main window
function Library:CreateWindow(title)
    local window = {}
    local screenGui = createScreenGui()
    
    -- Main frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Parent = screenGui
    mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    mainFrame.BorderSizePixel = 0
    mainFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
    mainFrame.Size = UDim2.new(0, 300, 0, 200)
    
    -- Rounded corners
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = mainFrame
    
    -- Drop shadow
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.Parent = mainFrame
    shadow.BackgroundTransparency = 1
    shadow.Position = UDim2.new(0, -15, 0, -15)
    shadow.Size = UDim2.new(1, 30, 1, 30)
    shadow.ZIndex = -1
    shadow.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.7
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10, 10, 118, 118)
    
    -- Title bar
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Parent = mainFrame
    titleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    titleBar.BorderSizePixel = 0
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 12)
    titleCorner.Parent = titleBar
    
    -- Title text
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Parent = titleBar
    titleLabel.BackgroundTransparency = 1
    titleLabel.Position = UDim2.new(0, 15, 0, 0)
    titleLabel.Size = UDim2.new(1, -30, 1, 0)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Text = title or "Clean UI"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextScaled = true
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Content frame
    local contentFrame = Instance.new("ScrollingFrame")
    contentFrame.Name = "ContentFrame"
    contentFrame.Parent = mainFrame
    contentFrame.BackgroundTransparency = 1
    contentFrame.Position = UDim2.new(0, 0, 0, 45)
    contentFrame.Size = UDim2.new(1, 0, 1, -45)
    contentFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    contentFrame.ScrollBarThickness = 4
    contentFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
    contentFrame.BorderSizePixel = 0
    
    -- Layout for buttons
    local layout = Instance.new("UIListLayout")
    layout.Parent = contentFrame
    layout.Padding = UDim.new(0, 8)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    
    local padding = Instance.new("UIPadding")
    padding.Parent = contentFrame
    padding.PaddingTop = UDim.new(0, 10)
    padding.PaddingBottom = UDim.new(0, 10)
    padding.PaddingLeft = UDim.new(0, 15)
    padding.PaddingRight = UDim.new(0, 15)
    
    -- Make draggable
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    
    -- Auto-resize canvas
    layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        contentFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 20)
    end)
    
    window.Frame = mainFrame
    window.Content = contentFrame
    
    -- Create button function
    function window:CreateButton(config)
        local buttonConfig = config or {}
        local buttonText = buttonConfig.Text or "Button"
        local callback = buttonConfig.Callback or function() end
        
        -- Button frame
        local button = Instance.new("TextButton")
        button.Name = "Button"
        button.Parent = contentFrame
        button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        button.BorderSizePixel = 0
        button.Size = UDim2.new(1, 0, 0, 32)
        button.Font = Enum.Font.Gotham
        button.Text = buttonText
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.TextScaled = true
        button.AutoButtonColor = false
        
        -- Button corner
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 8)
        buttonCorner.Parent = button
        
        -- Button padding
        local buttonPadding = Instance.new("UIPadding")
        buttonPadding.Parent = button
        buttonPadding.PaddingLeft = UDim.new(0, 12)
        buttonPadding.PaddingRight = UDim.new(0, 12)
        buttonPadding.PaddingTop = UDim.new(0, 2)
        buttonPadding.PaddingBottom = UDim.new(0, 2)
        
        -- Hover effects
        local hoverTween = TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            BackgroundColor3 = Color3.fromRGB(55, 55, 55)
        })
        
        local normalTween = TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {
            BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        })
        
        local clickTween = TweenService:Create(button, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {
            BackgroundColor3 = Color3.fromRGB(65, 65, 65)
        })
        
        -- Button events
        button.MouseEnter:Connect(function()
            hoverTween:Play()
        end)
        
        button.MouseLeave:Connect(function()
            normalTween:Play()
        end)
        
        button.MouseButton1Down:Connect(function()
            clickTween:Play()
        end)
        
        button.MouseButton1Up:Connect(function()
            hoverTween:Play()
        end)
        
        button.MouseButton1Click:Connect(function()
            callback()
        end)
        
        return button
    end
    
    return window
end

return Library

--[[
EXAMPLE USAGE:

local Library = loadstring(game:HttpGet("path_to_this_script"))()

-- Create window
local Window = Library:CreateWindow("My Clean UI")

-- Create buttons
Window:CreateButton({
    Text = "Teleport to Spawn",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0, 5, 0)
        print("Teleported to spawn!")
    end
})

Window:CreateButton({
    Text = "Speed Boost",
    Callback = function()
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 32
        print("Speed boosted!")
    end
})

Window:CreateButton({
    Text = "Reset Speed",
    Callback = function()
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
        print("Speed reset!")
    end
})

Window:CreateButton({
    Text = "Print Hello",
    Callback = function()
        print("Hello from Clean UI!")
    end
})
--]]
