-- SimpleUI - Lightweight Roblox UI Library
-- Mobile-friendly with smooth animations

local SimpleUI = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Default settings
local DEFAULTS = {
    animationTime = 0.3,
    easingStyle = Enum.EasingStyle.Quad,
    easingDirection = Enum.EasingDirection.Out,
    primaryColor = Color3.fromRGB(70, 130, 250),
    secondaryColor = Color3.fromRGB(45, 45, 45),
    textColor = Color3.fromRGB(255, 255, 255),
    cornerRadius = UDim.new(0, 8)
}

-- Utility functions
local function createTween(object, properties, time)
    local info = TweenInfo.new(
        time or DEFAULTS.animationTime,
        DEFAULTS.easingStyle,
        DEFAULTS.easingDirection
    )
    return TweenService:Create(object, info, properties)
end

local function isMobile()
    return UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled
end

-- Create base frame with rounded corners
function SimpleUI.createFrame(parent, properties)
    local frame = Instance.new("Frame")
    frame.Parent = parent
    frame.BackgroundColor3 = properties.color or DEFAULTS.secondaryColor
    frame.BorderSizePixel = 0
    frame.Size = properties.size or UDim2.new(0, 200, 0, 100)
    frame.Position = properties.position or UDim2.new(0, 0, 0, 0)
    
    -- Add corner rounding
    local corner = Instance.new("UICorner")
    corner.CornerRadius = properties.cornerRadius or DEFAULTS.cornerRadius
    corner.Parent = frame
    
    return frame
end

-- Create animated button
function SimpleUI.createButton(parent, properties)
    local button = Instance.new("TextButton")
    button.Parent = parent
    button.BackgroundColor3 = properties.color or DEFAULTS.primaryColor
    button.BorderSizePixel = 0
    button.Size = properties.size or UDim2.new(0, 120, 0, 40)
    button.Position = properties.position or UDim2.new(0, 0, 0, 0)
    button.Text = properties.text or "Button"
    button.TextColor3 = properties.textColor or DEFAULTS.textColor
    button.TextScaled = true
    button.Font = Enum.Font.GothamBold
    
    -- Mobile-friendly sizing
    if isMobile() then
        button.Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset, 0, math.max(50, button.Size.Y.Offset))
    end
    
    -- Add corner rounding
    local corner = Instance.new("UICorner")
    corner.CornerRadius = properties.cornerRadius or DEFAULTS.cornerRadius
    corner.Parent = button
    
    -- Add text padding
    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 12)
    padding.PaddingRight = UDim.new(0, 12)
    padding.PaddingTop = UDim.new(0, 8)
    padding.PaddingBottom = UDim.new(0, 8)
    padding.Parent = button
    
    -- Animation effects
    local originalSize = button.Size
    local hoverSize = UDim2.new(originalSize.X.Scale, originalSize.X.Offset + 4, originalSize.Y.Scale, originalSize.Y.Offset + 2)
    
    button.MouseEnter:Connect(function()
        createTween(button, {Size = hoverSize}, 0.15):Play()
        createTween(button, {BackgroundColor3 = button.BackgroundColor3:lerp(Color3.new(1, 1, 1), 0.1)}, 0.15):Play()
    end)
    
    button.MouseLeave:Connect(function()
        createTween(button, {Size = originalSize}, 0.15):Play()
        createTween(button, {BackgroundColor3 = properties.color or DEFAULTS.primaryColor}, 0.15):Play()
    end)
    
    button.MouseButton1Down:Connect(function()
        createTween(button, {Size = UDim2.new(originalSize.X.Scale, originalSize.X.Offset - 2, originalSize.Y.Scale, originalSize.Y.Offset - 1)}, 0.1):Play()
    end)
    
    button.MouseButton1Up:Connect(function()
        createTween(button, {Size = originalSize}, 0.1):Play()
    end)
    
    -- Callback
    if properties.callback then
        button.MouseButton1Click:Connect(properties.callback)
    end
    
    return button
end

-- Create text label with fade-in animation
function SimpleUI.createLabel(parent, properties)
    local label = Instance.new("TextLabel")
    label.Parent = parent
    label.BackgroundTransparency = 1
    label.Size = properties.size or UDim2.new(1, 0, 0, 30)
    label.Position = properties.position or UDim2.new(0, 0, 0, 0)
    label.Text = properties.text or "Label"
    label.TextColor3 = properties.textColor or DEFAULTS.textColor
    label.TextScaled = properties.textScaled or true
    label.Font = properties.font or Enum.Font.Gotham
    label.TextTransparency = 1
    
    -- Add text padding
    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 8)
    padding.PaddingRight = UDim.new(0, 8)
    padding.Parent = label
    
    -- Fade in animation
    createTween(label, {TextTransparency = 0}, 0.5):Play()
    
    return label
end

-- Create sliding panel
function SimpleUI.createPanel(parent, properties)
    local panel = SimpleUI.createFrame(parent, {
        size = properties.size or UDim2.new(0, 300, 0, 400),
        position = properties.position or UDim2.new(1, 20, 0.5, -200),
        color = properties.color or DEFAULTS.secondaryColor,
        cornerRadius = properties.cornerRadius
    })
    
    -- Add shadow effect
    local shadow = Instance.new("ImageLabel")
    shadow.Parent = panel
    shadow.Size = UDim2.new(1, 20, 1, 20)
    shadow.Position = UDim2.new(0, -10, 0, -10)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
    shadow.ImageColor3 = Color3.new(0, 0, 0)
    shadow.ImageTransparency = 0.8
    shadow.ZIndex = panel.ZIndex - 1
    
    local shadowCorner = Instance.new("UICorner")
    shadowCorner.CornerRadius = properties.cornerRadius or DEFAULTS.cornerRadius
    shadowCorner.Parent = shadow
    
    -- Panel controls
    panel.slideIn = function()
        local targetPos = properties.openPosition or UDim2.new(1, -320, 0.5, -200)
        createTween(panel, {Position = targetPos}):Play()
    end
    
    panel.slideOut = function()
        local targetPos = properties.position or UDim2.new(1, 20, 0.5, -200)
        createTween(panel, {Position = targetPos}):Play()
    end
    
    return panel
end

-- Create modal with backdrop
function SimpleUI.createModal(parent, properties)
    -- Backdrop
    local backdrop = Instance.new("Frame")
    backdrop.Parent = parent
    backdrop.Size = UDim2.new(1, 0, 1, 0)
    backdrop.Position = UDim2.new(0, 0, 0, 0)
    backdrop.BackgroundColor3 = Color3.new(0, 0, 0)
    backdrop.BackgroundTransparency = 1
    backdrop.ZIndex = 100
    
    -- Modal content
    local modal = SimpleUI.createFrame(backdrop, {
        size = properties.size or UDim2.new(0, 300, 0, 200),
        position = UDim2.new(0.5, -150, 0.5, -100),
        color = properties.color or DEFAULTS.secondaryColor,
        cornerRadius = properties.cornerRadius
    })
    modal.ZIndex = 101
    
    -- Initial state (hidden)
    modal.Size = UDim2.new(0, 0, 0, 0)
    
    -- Show animation
    modal.show = function()
        createTween(backdrop, {BackgroundTransparency = 0.3}):Play()
        createTween(modal, {Size = properties.size or UDim2.new(0, 300, 0, 200)}):Play()
    end
    
    -- Hide animation
    modal.hide = function()
        createTween(backdrop, {BackgroundTransparency = 1}):Play()
        local hideTween = createTween(modal, {Size = UDim2.new(0, 0, 0, 0)})
        hideTween:Play()
        hideTween.Completed:Connect(function()
            backdrop:Destroy()
        end)
    end
    
    -- Close on backdrop click
    backdrop.MouseButton1Click:Connect(function()
        modal.hide()
    end)
    
    return modal
end

-- Create notification
function SimpleUI.createNotification(parent, properties)
    local notification = SimpleUI.createFrame(parent, {
        size = UDim2.new(0, 280, 0, 60),
        position = UDim2.new(1, 20, 0, 20),
        color = properties.color or DEFAULTS.primaryColor,
        cornerRadius = properties.cornerRadius
    })
    
    -- Add text
    local label = SimpleUI.createLabel(notification, {
        text = properties.text or "Notification",
        textColor = properties.textColor or DEFAULTS.textColor,
        size = UDim2.new(1, -40, 1, 0),
        position = UDim2.new(0, 20, 0, 0)
    })
    
    -- Slide in animation
    local targetPos = UDim2.new(1, -300, 0, 20)
    createTween(notification, {Position = targetPos}):Play()
    
    -- Auto hide after duration
    wait(properties.duration or 3)
    local hidePos = UDim2.new(1, 20, 0, 20)
    local hideTween = createTween(notification, {Position = hidePos})
    hideTween:Play()
    hideTween.Completed:Connect(function()
        notification:Destroy()
    end)
    
    return notification
end

-- Create loading spinner
function SimpleUI.createSpinner(parent, properties)
    local spinner = Instance.new("ImageLabel")
    spinner.Parent = parent
    spinner.Size = properties.size or UDim2.new(0, 40, 0, 40)
    spinner.Position = properties.position or UDim2.new(0.5, -20, 0.5, -20)
    spinner.BackgroundTransparency = 1
    spinner.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
    spinner.ImageColor3 = properties.color or DEFAULTS.primaryColor
    
    -- Rotation animation
    local rotationTween = createTween(spinner, {Rotation = 360}, 1)
    rotationTween.Completed:Connect(function()
        spinner.Rotation = 0
        rotationTween:Play()
    end)
    rotationTween:Play()
    
    spinner.stop = function()
        rotationTween:Cancel()
        spinner:Destroy()
    end
    
    return spinner
end

-- Initialize library with custom settings
function SimpleUI.init(settings)
    if settings then
        for key, value in pairs(settings) do
            if DEFAULTS[key] then
                DEFAULTS[key] = value
            end
        end
    end
    
    print("SimpleUI initialized! Mobile support:", isMobile())
end

-- Example usage function
function SimpleUI.createExample(parent)
    -- Create main container
    local container = SimpleUI.createFrame(parent, {
        size = UDim2.new(0, 400, 0, 300),
        position = UDim2.new(0.5, -200, 0.5, -150),
        color = Color3.fromRGB(30, 30, 30)
    })
    
    -- Title
    SimpleUI.createLabel(container, {
        text = "SimpleUI Demo",
        size = UDim2.new(1, 0, 0, 40),
        position = UDim2.new(0, 0, 0, 10),
        font = Enum.Font.GothamBold
    })
    
    -- Sample button
    SimpleUI.createButton(container, {
        text = "Click Me!",
        size = UDim2.new(0, 120, 0, 40),
        position = UDim2.new(0.5, -60, 0, 60),
        callback = function()
            SimpleUI.createNotification(parent, {
                text = "Button clicked!",
                color = Color3.fromRGB(50, 200, 50)
            })
        end
    })
    
    -- Modal button
    SimpleUI.createButton(container, {
        text = "Open Modal",
        size = UDim2.new(0, 120, 0, 40),
        position = UDim2.new(0.5, -60, 0, 110),
        callback = function()
            local modal = SimpleUI.createModal(parent, {
                size = UDim2.new(0, 250, 0, 150)
            })
            
            SimpleUI.createLabel(modal, {
                text = "This is a modal!",
                size = UDim2.new(1, 0, 0, 30),
                position = UDim2.new(0, 0, 0, 20)
            })
            
            SimpleUI.createButton(modal, {
                text = "Close",
                size = UDim2.new(0, 80, 0, 30),
                position = UDim2.new(0.5, -40, 1, -50),
                callback = function()
                    modal.hide()
                end
            })
            
            modal.show()
        end
    })
    
    return container
end

return SimpleUI
